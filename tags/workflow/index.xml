<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>workflow | Joseph V. Casillas</title>
    <link>http://jvcasillas.github.io/tags/workflow/</link>
      <atom:link href="http://jvcasillas.github.io/tags/workflow/index.xml" rel="self" type="application/rss+xml" />
    <description>workflow</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Joseph V. Casillas © 2021 </copyright><lastBuildDate>Wed, 27 Apr 2016 00:00:00 +0000</lastBuildDate>
    <image>
      <url>http://jvcasillas.github.io/img/jvc2016.png</url>
      <title>workflow</title>
      <link>http://jvcasillas.github.io/tags/workflow/</link>
    </image>
    
    <item>
      <title>R-Snippets</title>
      <link>http://jvcasillas.github.io/project/r_snippets/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>http://jvcasillas.github.io/project/r_snippets/</guid>
      <description>&lt;iframe src=&#34;http://ghbtns.com/github-btn.html?user=jvcasillas&amp;repo=R-snippets&amp;type=watch&amp;count=true&amp;size=large&#34; height=&#34;30&#34; width=&#34;170&#34; frameborder=&#34;0&#34; scrolling=&#34;0&#34; style=&#34;width:130px; height: 30px;&#34; allowTransparency=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;iframe src=&#34;http://ghbtns.com/github-btn.html?user=jvcasillas&amp;repo=R-snippets&amp;type=fork&amp;count=true&amp;size=large&#34; height=&#34;30&#34; width=&#34;170&#34; frameborder=&#34;0&#34; scrolling=&#34;0&#34; style=&#34;width:130px; height: 30px;&#34; allowTransparency=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;iframe src=&#34;http://ghbtns.com/github-btn.html?user=jvcasillas&amp;type=follow&amp;count=true&amp;size=large&#34; height=&#34;30&#34; width=&#34;240&#34; frameborder=&#34;0&#34; scrolling=&#34;0&#34; style=&#34;width:240px; height: 30px;&#34; allowTransparency=&#34;true&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;This repository is a collection of snippets that I use in &lt;a href=&#34;http://www.sublimetext.com&#34; target=&#34;_blank&#34;&gt;SublimeText&lt;/a&gt; for doing statistical analysis in &lt;a href=&#34;http://www.r-project.org&#34; target=&#34;_blank&#34;&gt;R&lt;/a&gt;. The goal is straightforward: document the code that I use most often while doing linguistic research and make it readily available (and understandable) to other linguists. If you are interested in helping see the github &lt;a href=&#34;https://github.com/jvcasillas/R-snippets&#34; target=&#34;_blank&#34;&gt;repository&lt;/a&gt;. To install R-snippets see the &lt;a href=&#34;https://sublime.wbond.net/packages/R-snippets&#34; target=&#34;_blank&#34;&gt;package control&lt;/a&gt; page. To use a snippet, type the trigger and hit the tab key. For example, typing &lt;code&gt;lm&lt;/code&gt; brings up the following window:&lt;/p&gt;

&lt;p&gt;&lt;img id=&#39;rcorners&#39; width=&#34;100%&#34; src=&#34;../../../img/thumbnails/lm2.png&#34; alt=&#34;lm image&#34;&gt;&lt;/p&gt;

&lt;p&gt;Selecting &lt;code&gt;Random slope and random intercept model&lt;/code&gt; expands to&amp;hellip;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# load lme4 for mixed models
library(lme4)

# random intercept and random slope model
modelName = lmer(DV ~ fixedFactor1 +* fixedFactor2 + (1 + randomSlope|randomInt), data=df)
modelName

hist(residuals(modelName))
qqnorm(residuals(modelName))
qqline(residuals(modelName))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Main triggers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&amp;ldquo;plot&amp;rdquo;: templates for plotting in base R&lt;/li&gt;
&lt;li&gt;&amp;ldquo;edit&amp;rdquo;: options useful for data cleansing and saving&lt;/li&gt;
&lt;li&gt;&amp;ldquo;desc&amp;rdquo;: descriptive statistics of data&lt;/li&gt;
&lt;li&gt;&amp;ldquo;ttest&amp;rdquo;: distinct types of t-test&lt;/li&gt;
&lt;li&gt;&amp;ldquo;aov&amp;rdquo;: distinct analysis of variance models&lt;/li&gt;
&lt;li&gt;&amp;ldquo;lm&amp;rdquo;: linear and logistic regression&lt;/li&gt;
&lt;li&gt;&amp;ldquo;lmem&amp;rdquo;: linear mixed effects models&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Extras:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&amp;ldquo;subset&amp;rdquo;: make subsets of a DF&lt;/li&gt;
&lt;li&gt;&amp;ldquo;read&amp;rdquo;: read/load/install data/packages into R&lt;/li&gt;
&lt;li&gt;&amp;ldquo;save&amp;rdquo;: save plots, dfs, tables, etc.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;tikz&amp;rdquo;: template for creating R plots in LaTeX&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- links --&gt;
</description>
    </item>
    
    <item>
      <title>Data pipelines in R</title>
      <link>http://jvcasillas.github.io/post/2015-05-18_data_pipelines/</link>
      <pubDate>Mon, 18 May 2015 21:13:14 -0500</pubDate>
      <guid>http://jvcasillas.github.io/post/2015-05-18_data_pipelines/</guid>
      <description>


&lt;div id=&#34;overview&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;So you thought up a clever experiment, got IRB approval, recruited participants
and collected data… now what? New researchers are often confronted with an
unfortunate surprise when it comes time to perform some kind of analysis on
their data: they don’t know how, or even where to start. This can be a problem
for something trivial, like obtaining simple descriptive statistics, or
something much more complex, like fitting models, creating plots and making
predictions. When we conduct experiments we don’t usually begin by thinking
about how we will analyze our data, and in many academic programs this is not
explicitly taught to new students. For most people, especially beginners, the
data analysis issue arises later on in the process, usually after the data have
already been collected (although I think this ultimately changes with
experience).&lt;/p&gt;
&lt;p&gt;In light of all of this, I think that something handy to learn and evaluate
early on is how data analysis typically flows: from obtaining data to obtaining
new insight from the data. This is the data analysis pipeline, which usually
looks something like this:&lt;/p&gt;
&lt;p&gt;&lt;img width=&#34;100%&#34; src=&#34;./img/pipeline1.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;In essence, the process is simple. After collecting your data, you need to
&lt;em&gt;tidy&lt;/em&gt; it (step 2) so that it can be loaded and analyzed by your statistical
software. After tidying your data, you usually have to transform it (step 3)
in some way (also called data preprocessing). This can be occur via the creation
of new variables, combining variables, sub-setting variables, etc. Once you have
transformed your data, it’s time to visualize it (step 4a) via graphs/plots,
and, finally, analyze it. The visualization and analysis steps are often iterative:
you might notice something in a graph that leads you to a new
analysis, or some kind of insight that requires more data transformation and a
new analysis, and so on and so forth until you have obtained new insight and are
able to answer your research question(s).&lt;/p&gt;
&lt;p&gt;So, at the heart of data analysis is &lt;code&gt;tidy data&lt;/code&gt;. Most new researchers don’t
know what it means to tidy and transform their data, nor that it is probably
the most important part of any data analysis. Basically, if your data are not
formatted in a way in which they can be easily analyzed (via excel, SPSS, R,
etc.), then you can’t do anything with them.&lt;/p&gt;
&lt;p&gt;In order to facilitate the data analysis pipeline, it is crucial to have &lt;code&gt;tidy  data&lt;/code&gt;. What this means is that &lt;strong&gt;every column in your data frame represents a
variable and every row represents an observation&lt;/strong&gt;. This is also referred to as
&lt;em&gt;long format&lt;/em&gt; (as opposed to wide format). Most statistical software requires
your data to be in long format, with few exceptions (i.e. repeated measures
ANOVA in SPSS).&lt;/p&gt;
&lt;p&gt;In what follows, I take you through three packages that have been created in
order to facilitate the data analysis pipeline in R. Each package was created
by Hadley Wickham with steps 2, 3, and 4a of the pipeline in mind. Thus we can
associate each package with the corresponding step:&lt;/p&gt;
&lt;p&gt;&lt;img width=&#34;100%&#34; src=&#34;./img/pipeline2.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jvcasillas.com/tidyr_tutorial/&#34;&gt;tidyr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;dplyr&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jvcasillas.com/base_lattice_ggplot/&#34;&gt;basic plotting in r&lt;/a&gt; / ggvis&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(coming soon)&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>TikzDevice tutorial II: structuring a project</title>
      <link>http://jvcasillas.github.io/post/2013-05-17_tikz_-_projects/</link>
      <pubDate>Fri, 17 May 2013 21:13:14 -0500</pubDate>
      <guid>http://jvcasillas.github.io/post/2013-05-17_tikz_-_projects/</guid>
      <description>


&lt;div id=&#34;overview&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Overview&lt;/h4&gt;
&lt;p&gt;This mini tutorial is part II about incorporating &lt;strong&gt;tikzDevice&lt;/strong&gt; into your workflow. It explains the file structure necessary to successfully include &lt;strong&gt;tikzDevice&lt;/strong&gt; plots into your &lt;strong&gt;LaTeX document&lt;/strong&gt;. You must first have &lt;strong&gt;tikzDevice&lt;/strong&gt; installed. If you don’t, see &lt;a href=&#34;http://jvcasillas.github.io/blog/2013-05-11_tikz_-_installation/index.html&#34;&gt;part I&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;the-structure&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;The structure&lt;/h4&gt;
&lt;p&gt;A simple yet effective way to do reproducible research is to use &lt;a href=&#34;http://www.r-project.org&#34;&gt;R&lt;/a&gt; (for statistical analysis) directly in a &lt;strong&gt;LaTeX&lt;/strong&gt; environment. There are two ways to accomplish this: (1) Sweave and (2) &lt;a href=&#34;http://yihui.name/knitr/&#34;&gt;knitr&lt;/a&gt;. Knitr seems to be the better choice, as it builds on some of the deficiencies of Sweave, and is what I am currently using in my workflow. In order to successfully “knit” R code into a .tex format we must use a no-web (.nw) file to create the .tex file. There are two types of no-web files: .Rnw and .Snw. I am not completely sure what the differences are between then, but I use .Rnw and that is what I will mention in this tutorial.&lt;/p&gt;
&lt;p&gt;The first step is to create a project folder. For the purposes of this tutorial let’s call this folder “master”. Next, we will need some data and some R code that analyzes it. The most common, no-hassle way to accomplish this in R is to save your R code in a separate .R file. For this tutorial, we will call our data “my-data.txt” and our R code “example.R”. The fake data we are going to analyze is for a two-alternative forced choice identification experiment. So, our fake data is in the “my-data.txt” file and the R code that analyzes it is in the example.R file.&lt;/p&gt;
&lt;p&gt;The next step is to create the “no web” .Rnw file. This is as simple as creating a document in your text editor of choice (I use &lt;a href=&#34;https://github.com/textmate/textmate&#34;&gt;TextMate 2&lt;/a&gt; and &lt;a href=&#34;http://www.sublimetext.com&#34;&gt;Sublime Text 3&lt;/a&gt;) and saving it with a .Rnw extension. For this tutorial we will call this file “example.Rnw”. Its purpose is to call the R code written in “example.R” (which uses the fake data in “my-data.txt”) in order to produce a .tex file (in this case “example.tex”). Still with me? Good.&lt;/p&gt;
&lt;p&gt;Next we need to prepare where we are going to keep the plots produced by tikzDevice. I find it most convenient to have a specific folder, “plots_folder”, where I only keep the tikzDevice plots. So, create this folder inside the “master” folder. TikzDevice creates the R plots and converts them to a LaTeX format (the benefits of this are further explained in part III of this tutorial), saves them in “plots_folder” and we will then include them in the example.tex file which can be compiled into a PDF. The image below shows what this should look like when it’s all said and done.&lt;/p&gt;
&lt;div aligh=&#34;center&#34;&gt;
&lt;p&gt;&lt;img width=&#34;100%&#34; src=&#34;./img/tikz_workflow.png&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Check out &lt;a href=&#34;http://jvcasillas.github.io/blog/2014-05-28_tikz_-_standalone_plots/index.html&#34;&gt;part III&lt;/a&gt; to learn how to create standalone plots that can include IPA sybols.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
